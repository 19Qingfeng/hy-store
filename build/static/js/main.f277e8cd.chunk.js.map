{"version":3,"sources":["components/button/button.tsx","App.tsx","index.tsx"],"names":["prefix","Button","props","className","btnType","disabled","size","children","href","restProps","classes","classnames","defaultProps","App","onClick","alert","target","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sRAmBMA,EAAS,KAETC,EAAgC,SAACC,GACrC,IAAQC,EACND,EADMC,UAAWC,EACjBF,EADiBE,QAASC,EAC1BH,EAD0BG,SAAUC,EACpCJ,EADoCI,KAAMC,EAC1CL,EAD0CK,SAAUC,EACpDN,EADoDM,KAASC,EAA/D,YACEP,EADF,GAEMQ,EAAUC,IAAW,GAAD,OACrBX,EADqB,kBAErBA,EAFqB,iBAENM,GAFM,UAGrBN,EAHqB,iBAGNI,GAClB,CAAE,cAAeC,GACjBF,GAGF,MAAgB,SAAZC,EAEA,2CAAGD,UAAWO,EAASF,KAAMA,GAAUC,GAAvC,aACGF,KAKH,gDAAQJ,UAAWO,EAASL,SAAUA,GAAcI,GAApD,aACGF,MAMTN,EAAOW,aAAe,CACpBR,QAAS,UACTE,KAAM,MAGOL,QCjDA,SAASY,IACtB,OACE,gCACE,cAAC,EAAD,CAAQC,QAAS,kBAAMC,MAAM,UAA7B,2BACA,cAAC,EAAD,CAAQD,QAAS,kBAAMC,MAAM,UAAUV,UAAQ,EAA/C,2BAGA,cAAC,EAAD,CAAQD,QAAQ,UAAUE,KAAK,KAA/B,2BAGA,cAAC,EAAD,CAAQF,QAAQ,SAASE,KAAK,KAAKD,UAAU,EAA7C,sCAGA,cAAC,EAAD,CAAQD,QAAQ,OAAOI,KAAK,oBAAoBF,KAAK,KAAKU,OAAO,SAAjE,0BAGA,cAAC,EAAD,CAAQZ,QAAQ,OAAOI,KAAK,oBAAoBF,KAAK,KAAKD,UAAQ,EAAlE,6BCfNY,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACN,EAAD,MAEFO,SAASC,eAAe,W","file":"static/js/main.f277e8cd.chunk.js","sourcesContent":["import React from 'react';\nimport { ButtonSize, ButtonType } from './constant';\nimport classnames from 'classnames';\n\ninterface BaseButtonProps {\n  children?: React.ReactNode;\n  size?: ButtonSize;\n  btnType?: ButtonType;\n  disabled?: boolean;\n  href?: string;\n}\n\ntype NativeButtonProps = React.ButtonHTMLAttributes<HTMLElement> &\n  BaseButtonProps;\ntype AnchorButtonProps = React.AnchorHTMLAttributes<HTMLElement> &\n  BaseButtonProps;\n\nexport type ButtonProps = Partial<NativeButtonProps & AnchorButtonProps>;\n\nconst prefix = 'hy';\n\nconst Button: React.FC<ButtonProps> = (props) => {\n  const { className, btnType, disabled, size, children, href, ...restProps } =\n    props;\n  const classes = classnames(\n    `${prefix}-btn`,\n    `${prefix}-btn__${size}`, // 大小\n    `${prefix}-btn__${btnType}`, // 类型\n    { 'is-disabled': disabled }, // 是否禁用\n    className // 用户自定义className\n  );\n\n  if (btnType === 'link') {\n    return (\n      <a className={classes} href={href} {...restProps}>\n        {children}\n      </a>\n    );\n  } else {\n    return (\n      <button className={classes} disabled={disabled} {...restProps}>\n        {children}\n      </button>\n    );\n  }\n};\n\nButton.defaultProps = {\n  btnType: 'default',\n  size: 'lg',\n};\n\nexport default Button;\n","import './styles/index.scss';\nimport Button from './components/button/button';\n\nexport default function App() {\n  return (\n    <div>\n      <Button onClick={() => alert('hello')}>hello default</Button>\n      <Button onClick={() => alert('hello')} disabled>\n        hello default\n      </Button>\n      <Button btnType=\"primary\" size=\"sm\">\n        hello default\n      </Button>\n      <Button btnType=\"danger\" size=\"lg\" disabled={true}>\n        禁用按钮\n      </Button>\n      <Button btnType=\"link\" href=\"https://baidu.com\" size=\"sm\" target=\"_blank\">\n        链接\n      </Button>\n      <Button btnType=\"link\" href=\"https://baidu.com\" size=\"sm\" disabled>\n        链接\n      </Button>\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}