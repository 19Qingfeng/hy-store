@mixin button-size($padding-y, $padding-x, $font-size, $border-radius) {
  padding: $padding-y $padding-x;
  font-size: $font-size;
  border-radius: $border-radius;
}

@mixin button-type(
  $background,
  $border,
  $color,
  $hover-background: lighten($background, 7.5),
  $hover-border: lighten($border, 10%),
  $hover-color: $color
) {
  color: $color;
  background: $background;
  border-color: $border;
  &:hover {
    color: $hover-color;
    background: $hover-background;
    border-color: $hover-border;
  }
  &:focus,
  &.is-focus {
    color: $hover-color;
    background: $hover-background;
    border-color: $hover-border;
  }
  &[disabled],
  &.is-disabled {
    color: $color;
    background: $background;
    border-color: $border;
  }
}

/* BEM */
@mixin b($block) {
  $B: $namespace + "-" + $block !global;

  .#{$B} {
    @content;
  }
}

@mixin m($modifier) {
  $selector: &; // 父选择器
  $currentSelector: "";
  @each $unit in $modifier {
    $currentSelector: #{$currentSelector +
      & +
      $modifier-separator +
      $unit +
      ","};
  }

  @at-root {
    #{$currentSelector} {
      @content;
    }
  }
}

@mixin when($state) {
  @at-root {
    &.#{$state-prefix + $state} {
      @content;
    }
  }
}
/* BEM */

// $--sm: 768px !default;
// $--md: 992px !default;
// $--lg: 1200px !default;
// $--xl: 1920px !default;

// $--breakpoints: (
//   'xs' : (max-width: $--sm - 1),
//   'sm' : (min-width: $--sm),
//   'md' : (min-width: $--md),
//   'lg' : (min-width: $--lg),
//   'xl' : (min-width: $--xl)
// );

// @mixin res($key, $map: $--breakpoints) {
//   // 循环断点Map，如果存在则返回
//   @if map-has-key($map, $key) {
//     @media only screen and #{inspect(map-get($map, $key))} {
//       @content;
//     }
//   } @else {
//     @warn "Undefeined points: `#{$map}`";
//   }
// }

@mixin zoom-animation(
  $direction: "top",
  $scaleStart: scaleY(0),
  $scaleEnd: scaleY(1),
  $origin: center top
) {
  .zoom-in-#{$direction}-enter {
    opacity: 0;
    transform: $scaleStart;
  }
  .zoom-in-#{$direction}-enter-active {
    opacity: 1;
    transform: $scaleEnd;
    transition: transform 300ms cubic-bezier(0.23, 1, 0.32, 1) 100ms,
      opacity 300ms cubic-bezier(0.23, 1, 0.32, 1) 100ms;
    transform-origin: $origin;
  }
  .zoom-in-#{$direction}-exit {
    opacity: 1;
  }
  .zoom-in-#{$direction}-exit-active {
    opacity: 0;
    transform: $scaleStart;
    transition: transform 300ms cubic-bezier(0.23, 1, 0.32, 1) 100ms,
      opacity 300ms cubic-bezier(0.23, 1, 0.32, 1) 100ms;
    transform-origin: $origin;
  }
}
